{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","todoList","activeItem","id","title","complete","editing","fetchTasks","bind","handleChange","handleSubmit","getCookie","deleteItem","taskComplete","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","this","console","log","fetch","then","response","json","data","setState","e","target","value","preventDefault","csrftoken","url","method","headers","body","JSON","stringify","catch","error","task","completed","tasks","self","className","onSubmit","style","flex","onChange","type","placeholder","map","index","onClick","startEdit","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5570566d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoList : [],\n      activeItem : {\n        id : null,\n        title : \"\",\n        complete : false,\n      },\n      editing : false,\n    }\n    this.fetchTasks = this.fetchTasks.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.getCookie = this.getCookie.bind(this)\n    this.deleteItem = this.deleteItem.bind(this)\n    this.taskComplete = this.taskComplete.bind(this)\n  }\n  \n  getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n  }\n\n  componentDidMount(){\n    this.fetchTasks()\n  }\n\n  fetchTasks(){\n    console.log(\"fetching....\")\n    fetch(\"http://127.0.0.1:8000/api/task-list/\").then(response => response.json())\n    .then(data => this.setState({\n      todoList: data\n    }))\n  }\n\n  handleChange(e) {\n    var name = e.target.name\n    var value = e.target.value\n    this.setState({\n      activeItem : {\n        ...this.state.activeItem,\n        title : value\n      }\n    })\n  }\n\n  handleSubmit(e) {\n    e.preventDefault()\n    var csrftoken = this.getCookie(\"csrftoken\")\n    var url = \"http://127.0.0.1:8000/api/task-create/\"\n\n    if (this.state.editing == true) {\n      url = `http://127.0.0.1:8000/api/task-update/${this.state.activeItem.id}/`\n      this.setState({\n        editing: false,\n      })\n    }\n\n    fetch(url, {\n      method : 'POST',\n      headers : {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n      body : JSON.stringify(this.state.activeItem)\n    }).then(response => {\n      this.fetchTasks()\n      this.setState({\n        activeItem : {\n          id : null,\n          title : \"\",\n          complete : false,\n        },\n      })\n    }).catch(function(error) {\n      console.log(\"Error: \", error)\n    })\n  }\n\n  startEdit(task){\n    this.setState({\n      activeItem:task,\n      editing:true,\n    })\n  }\n\n  deleteItem(task) {\n    var csrftoken = this.getCookie(\"csrftoken\")\n\n    fetch(`http://127.0.0.1:8000/api/task-delete/${task.id}/`, {\n      method : 'DELETE',\n      headers : {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n    }).then( () => {\n      this.fetchTasks()\n    } )\n  }\n\n  taskComplete(task) {\n    var csrftoken = this.getCookie(\"csrftoken\")\n    task.completed = !task.completed\n\n    console.log(\"false\", task.completed)\n    \n    fetch(`http://127.0.0.1:8000/api/task-update/${task.id}/`, {\n      method : 'POST',\n      headers : {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n      body : JSON.stringify({'completed' : task.completed, 'title' : task.title})\n    }).then( () => {\n      this.fetchTasks()\n    })\n  }\n\n  render(){\n    var tasks = this.state.todoList\n    var self = this\n    return(\n        <div className=\"container\">\n\n          <div id=\"task-container\">\n              <div  id=\"form-wrapper\">\n                 <form onSubmit={this.handleSubmit} id=\"form\">\n                    <div className=\"flex-wrapper\">\n                        <div style={{flex: 6}}>\n                            <input onChange={this.handleChange} value={this.state.activeItem.title} className=\"form-control\" id=\"title\" type=\"text\" name=\"title\" placeholder=\"Add task..\" />\n                         </div>\n\n                         <div style={{flex: 1}}>\n                            <input id=\"submit\" className=\"btn btn-warning\" type=\"submit\" name=\"Add\" />\n                          </div>\n                      </div>\n                </form>\n             \n              </div>\n\n              <div  id=\"list-wrapper\">\n                { tasks.map(function(task, index) {\n                  return(\n                    <div key={index} className=\"task-wrapper flex-wrapper\">\n                      \n                      <div style={{flex:6}}>\n                        { task.completed == false ? (\n                          <span>{ task.title }</span>\n                          ) : (\n                            <strike>{ task.title }</strike>\n                        ) }\n                      </div>\n\n                      <div style={{flex:1}}>\n                        <button onClick={() => self.startEdit(task)} className=\"btn btn-sm btn-outline-info\">üñãÔ∏è</button>\n                      </div>\n\n                      <div style={{flex:1}}>\n                        <button onClick={() => self.taskComplete(task)} className=\"btn btn-sm btn-outline-warning\">‚úî</button>\n                      </div>\n\n                      <div style={{flex:1}}>\n                        <button onClick={() => self.deleteItem(task)} className=\"btn btn-sm btn-outline-dark delete\">-</button>\n                      </div>\n\n                    </div>\n                  )\n                }) }\n              </div>\n          </div>\n          \n        </div>\n      )\n  }\n\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}